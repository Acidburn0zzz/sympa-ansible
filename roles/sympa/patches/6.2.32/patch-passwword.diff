--- a/src/lib/Sympa/User.pm	2018-10-09 13:15:35.035198912 +0200
+++ b/src/lib/Sympa/User.pm	2018-10-09 13:13:53.743652699 +0200
@@ -642,9 +642,20 @@
 
     ## use hash fingerprint to store password
     ## hashes that use salts will randomly generate one
-    $values->{'password'} =
-        Sympa::User::password_fingerprint($values->{'password'}, undef)
-        if ($values->{'password'});
+    ## avoid rehashing passwords that are already hash strings
+    if ($values->{'password'}) {
+        if (defined(hash_type($values->{'password'}))) {
+            $log->syslog(
+                'err',
+                'Bug in logic: Password is in %s format, not rehashing',
+                hash_type($values->{'password'})
+            );
+        } else {
+            $values->{'password'} =
+                Sympa::User::password_fingerprint($values->{'password'},
+                undef);
+        }
+    }
 
     ## Canonicalize lang if possible.
     $values->{'lang'} = Sympa::Language::canonic_lang($values->{'lang'})
@@ -722,9 +733,20 @@
 
     ## encrypt password with the configured password hash algorithm
     ## an salt of 'undef' means generate a new random one
-    $values->{'password'} =
-        Sympa::User::password_fingerprint($values->{'password'}, undef)
-        if ($values->{'password'});
+    ## avoid rehashing passwords that are already hash strings
+    if ($values->{'password'}) {
+        if (defined(hash_type($values->{'password'}))) {
+            $log->syslog(
+                'err',
+                'Bug in logic. Password is in %s format, not rehashing',
+                hash_type($values->{'password'})
+            );
+        } else {
+            $values->{'password'} =
+                Sympa::User::password_fingerprint($values->{'password'},
+                undef);
+        }
+    }
 
     ## Canonicalize lang if possible
     $values->{'lang'} = Sympa::Language::canonic_lang($values->{'lang'})
